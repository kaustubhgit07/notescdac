#Factors are the data objects which are used to categorize the data
#and store it as levels. They can store both strings and integers.
#They are useful in the columns which have a limited number of unique values. 
#Like "Male, "Female" and True, False etc. 
#They are useful in data analysis for  statistical modeling.

#Factors are created using the factor () function by taking a vector as input.

?factor
# Create a vector as input.
data <- c("East","West","East","North","North","East",
                      "West","West","West","East","North")

print(data)
print(is.factor(data))

# Apply the factor function.
factor_data <- factor(data)

print(factor_data)
class(factor_data)
print(is.factor(factor_data))

#Factors as Data_Frame
# Create the vectors for data frame.
height <- c(132,151,162,139,166,147,122)
weight <- c(48,49,66,53,67,52,40)
gender <- c("male","male","female","female","male","female","male")

# Create the data frame.
input_data <- data.frame(height,weight,gender)
print(input_data)
str(input_data)
# Test if the gender column is a factor.
print(is.factor(input_data$gender))
input_data$gender = as.factor(gender)
as.factor(gender)

# Print the gender column so see the levels.
print(input_data$gender)

#Changing the order of levels
data <- c("East","West","East","North","North","East","West",
          "West","West","East","North")
# Create the factors
factor_data <- factor(data)
print(factor_data)

# Apply the factor function with required order of the level.
new_order_data <- factor(factor_data,levels = c("East","West","North"))
print(new_order_data)



# Create the vectors for data frame.
height <- c(132,151,162,139,166,147,122)
weight <- c(48,49,66,53,67,52,40)
gender <- c("male","male","female","female","male","female","male")
input_data <- data.frame(height,weight,gender)
write.csv(input_data,file = "new_data.csv")
write.csv(input_data,file = "new_data.csv")
write.table(input_data,file = "new_data.txt")#no separator
write.table(input_data,file = "new_data.txt",sep = ",")#no separator
write.table(input_data,file = "new_data.txt",sep = "chup")#no separator
install.packages("writexl")
library(writexl)
write_xlsx(input_data,"new_data.xlsx")


?write.csv

fun <- function(a){
  print(a*a)
}

fun(9)

x = readline()

add <- function(){
  x = as.integer(readline("Enter a number: "))
  y = as.integer(readline("Enter a number: "))
  print(x+y)
}


calc <- function(){
  x = as.integer(readline("Enter a number: "))
  y = as.integer(readline("Enter a number: "))
  print(x+y)
  print(x-y)
  print(x*y)
  print(x/y) 
}

calc()
add()

?paste

paste("the answer"," ",21)
?paste0
paste0("the answer",21)

calc <- function(){
  x = as.integer(readline("Enter a number: "))
  y = as.integer(readline("Enter a number: "))
  print(paste("Sum"," = ",x+y))
  print(paste("Difference"," = ",x-y))
  print(paste("Product"," = ",x*y))
  print(paste("Quotient"," = ",x/y))
}

calc()
add1 <- function(a,b){
  print(a+b)
}

add1(21,-89)

#Define a function to take two numbers from the user and print the bigger number

fun1<-function(){
  a=as.integer(readline("enter a no buddy"))
  b=as.integer(readline("enter a no buddy:"))
  if(a>b){
    print(paste(a,"is big"))
  }else{
    print(paste(b,"is big"))
  }
}
fun1()

#Define a function to take Four numbers from the user 
#and print the number in ascending order












#create a function which will convert upper case letter to lower case

sort(c(1,4,5,2,3))
?sort


asc=function(a=as.integer(readline()), b=as.integer(readline()),c=as.integer(readline()),d=as.integer(readline())){
  v=c(a,b,c,d)
  v1=sort(v)
  print(v1)
}
asc()


#Define a function which will take two integers as an input and then 
#Print its addition, multiplication,subtraction,division

all <- function(){
  a = as.integer(readline("Enter a number :"))
  b = as.integer(readline("Enter a number :"))
  print(paste("Addition :",a+b))
  print(paste("Substraction :",a-b))
  print(paste("Multiplication :",a*b))
  print(paste("Division :",a/b))
}

all()

#Create an user defined function to create an employee data frame (Name,Gender,Age)
employee <- function() {
  Name=readline(print("enter emp name: "))
  Gender=as.character(readline(print("enter gender: ")))
  Age= as.integer(readline(print("enetr age: ")))
  emp=data.frame(Name, gender, Age)
  emp
}

employee()
x = c(1,2,3,4)
sorting = function(x) {
  for (i in 1:(length(x)-1)) {
    for (j in (i+1):length(x)) {
      if ( x[i] > x[j]) {
        x[c(i,j)] = x[c(j,i)]
      }
      
    }
    
  }
  print(x)
}



x = c(1,2,9,3,4,5,15,16,17)
sorting(x)






#Generating Factor Levels
#We can generate factor levels by using the gl() function. 
#It takes two integers as input which indicates how many levels
#and how many times each level.
?	gl
#Syntax
#gl(n, k, labels)

v <- gl(3, 4, labels = c("Thane", "Borivali","Dombivali"))
print(v)

v <- gl(3, 4, labels = c("Thane", "Borivali"))
print(v)

?gl
v <- gl(3, 4,length = 16, labels = c("Thane", "Borivali","Dombivali"))
print(v)


#Arrays are the R data objects which can store data in more than
#two dimensions. For example - If we create an array of dimension
#(2, 3, 4) then it creates 4 rectangular matrices each with 
#2 rows and 3 columns

#An array is created using the array() function. 
#It takes vectors as input and uses the values in the dim parameter
#to create an array.
?array
# Create two vectors of different lengths.
vector1 <- c(5,9,3)
vector2 <- c(10,11,12,13,14,15)
?array
# Take these vectors as input to the array.
result <- array(c(vector1,vector2),dim = c(3,3,2))
print(result)

#

vector1 <- c(5,9,3,5,9,3,5,9,3)
vector2 <- c(10,11,12,13,14,15,10,11,12)
?array
# Take these vectors as input to the array.
result <- array(c(vector1,vector2),dim = c(3,3,2))
print(result)

result <- array(c(vector1,vector2),dim = c(3,3,3))
print(result)

#Naming Columns & Rows
# Create two vectors of different lengths.
vector1 <- c(5,9,3)
vector2 <- c(10,11,12,13,14,15)
columnnames <- c("COL1","COL2","COL3")
rownames <- c("ROW1","ROW2","ROW3")
matrixnames <- c("Matrix1","Matrix2")

# Take these vectors as input to the array.
result <- array(c(vector1,vector2),dim = c(3,3,2),
            dimnames = list(rownames,columnnames,matrixnames))
print(result)

# Take these vectors as input to the array.
result <- array(c(vector1,vector2),dim = c(3,3,2),
            dimnames = list(rownames,columnnames,matrixnames))
print(result)


#Accessing Array Elements
# Create two vectors of different lengths.
vector1 <- c(5,9,3)
vector2 <- c(10,11,12,13,14,15)
column.names <- c("COL1","COL2","COL3")
row.names <- c("ROW1","ROW2","ROW3")
matrix.names <- c("Matrix1","Matrix2")

# Take these vectors as input to the array.
result <- array(c(vector1,vector2),dim = c(3,3,2),
               dimnames = list(row.names,column.names,matrix.names))
print(result)
#element in third row of second matrix
result[3,,2]
#element in the first row and 3rd column
result[1,3,]
#2nd matrix
result[,,2]

#Create two arrays Array1 & Array 2 where dimension of Array is (3,3,2)
#& Dimension of Array 2 is (3,3,3) 
#& access elements from 1st matrix-2nd row ,2nd matrix 2nd row 
#from both Array 1 & Array 2.

#Manipulating Array Elements
# Create two vectors of different lengths.
vector1 <- c(5,9,3)
vector2 <- c(10,11,12,13,14,15)

# Take these vectors as input to the array.
array1 <- array(c(vector1,vector2),dim = c(3,3,2))

# Create two vectors of different lengths.
vector3 <- c(9,1,0)
vector4 <- c(6,0,11,3,14,1,2,6,9)
array2 <- array(c(vector3,vector4),dim = c(3,3,2))

# create matrices from these arrays.
matrix1 <- array1[,,2]
matrix2 <- array2[,,2]


# Add the matrices.
result <- matrix1+matrix2
print(result)

v <- gl(3, 4,length = 24, labels = c("Thane", "Borivali","Dombivali"))
print(v)


#Write a R script to create factor data object which will have 3 levels
A,B & C where A will be repeated 7 times, B 8 times & C 11 times. 

#Giving Dimension names to matrix
M = matrix(v,nrow=2,ncol=2,dimnames = list(c("A","B"),c("X","Y")))
M1=matrix(v,nrow=2,ncol=2,dimnames = list(c("A","B","C"),c("X","Y","Z")))
M2=matrix(v,nrow=3,ncol=3,dimnames = list(c("A","B"),c("X","Y")))











